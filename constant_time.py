def calculate_average(data):
    # Сохраняем длину массива в переменную, чтобы дважды не считать.
    len_data = len(data)
    # Формула суммы арифметической прогрессии.
    data_sum = (data[0] + data[-1]) * len_data / 2
    # Делим сумму на количество элементов.
    average = data_sum / len_data
    return average


print(calculate_average([1, 2, 3, 4 ,5])) 


# Получившийся алгоритм перестал зависеть от длины массива и теперь
# выполняется за постоянное время! Каким бы ни был размер массива,
# количество операций всегда будет одно и то же:

#     Подсчёт длины массива.
#     Получение первого элемента массива.
#     Получение последнего элемента массива.
#     Суммирование первого и последнего элементов.
#     Умножение результата из п. 4 на длину массива.
#     Деление результата из п. 5 на 2.
#     Деление результата из п. 6 на длину массива.

# Можно было бы записать сложность алгоритма как O(7) или, что то же самое,
# O(7 * 1). Второе правило говорит, что все константы надо отбрасывать.
# Отбрасываем семёрку, получаем результат: сложность алгоритма равна O(1).